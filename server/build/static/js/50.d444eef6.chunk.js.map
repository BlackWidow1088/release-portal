{"version":3,"sources":["views/Release/components/BasicReleaseInfo.js","views/Release/ManageRelease.js"],"names":["BasicReleaseInfo","props","_this","Object","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_6__","reactstrap__WEBPACK_IMPORTED_MODULE_7__","reactstrap__WEBPACK_IMPORTED_MODULE_8__","reactstrap__WEBPACK_IMPORTED_MODULE_9__","row","className","reactstrap__WEBPACK_IMPORTED_MODULE_10__","xs","reactstrap__WEBPACK_IMPORTED_MODULE_11__","htmlFor","isEditing","reactstrap__WEBPACK_IMPORTED_MODULE_12__","type","id","name","placeholder","onChange","e","handleUpdate","TargetedReleaseDate","target","value","readOnly","basicReleaseInfo","TargetedCodeFreezeDate","TargetedQATestingDate","TargetedUpgradeTestingDate","ActualReleaseDate","ActualCodeFreezeDate","QAStartDate","UpgradeTestingStartDate","reactstrap__WEBPACK_IMPORTED_MODULE_13__","md","lg","rows","RedFlagsRisks","AutomationSyncUp","Component","connect","ownProps","currentUser","auth","release","all","filter","item","ReleaseNumber","ManageRelease","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","toggle","setState","modal","delToggle","delModal","allReleases","updatedValues","axios","delete","concat","then","res","alert","removeFromNavBar","deleteRelease","error","_this3","data","_home_abhijeet_Desktop_blackwidow1088_QA_Analysis_website_front_end_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread__WEBPACK_IMPORTED_MODULE_0__","console","log","post","updateNavBar","saveReleaseBasicInfo","reset","momModal","momToggle","_this4","react__WEBPACK_IMPORTED_MODULE_6___default","map","onClick","size","color","sm","reactstrap__WEBPACK_IMPORTED_MODULE_14__","reactstrap__WEBPACK_IMPORTED_MODULE_15__","reactstrap__WEBPACK_IMPORTED_MODULE_16__","_components_BasicReleaseInfo__WEBPACK_IMPORTED_MODULE_24__","reactstrap__WEBPACK_IMPORTED_MODULE_17__","reactstrap__WEBPACK_IMPORTED_MODULE_18__","isOpen","reactstrap__WEBPACK_IMPORTED_MODULE_19__","reactstrap__WEBPACK_IMPORTED_MODULE_20__","reactstrap__WEBPACK_IMPORTED_MODULE_21__","save"],"mappings":"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","file":"static/js/50.d444eef6.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    FormGroup,\n    Input,\n    Label,\n    Row\n} from 'reactstrap';\nimport { connect } from 'react-redux';\n\nclass BasicReleaseInfo extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Card>\n                    <CardHeader>\n                        Target Dates of Release\n                </CardHeader>\n                    <CardBody>\n                        <FormGroup row className=\"my-0\">\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"targetReleaseDate\">Release Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"targetReleaseDate\" name=\"targetReleaseDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.TargetedReleaseDate} /> :\n                                            <Input type=\"date\" id=\"targetReleaseDate\" name=\"targetReleaseDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ TargetedReleaseDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"targetCodeFreezeDate\">Code Freeze Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"targetCodeFreezeDate\" name=\"targetCodeFreezeDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.TargetedCodeFreezeDate} /> :\n                                            <Input type=\"date\" id=\"targetCodeFreezeDate\" name=\"targetCodeFreezeDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ TargetedCodeFreezeDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"targetQATestingDate\">QA Testing Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"targetQATestingDate\" name=\"targetQATestingDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.TargetedQATestingDate} /> :\n                                            <Input type=\"date\" id=\"targetQATestingDate\" name=\"targetQATestingDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ TargetedQATestingDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"targetUpgradeTestingDate\">Upgrade Testing Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"targetUpgradeTestingDate\" name=\"targetUpgradeTestingDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.TargetedUpgradeTestingDate} /> :\n                                            <Input type=\"date\" id=\"targetUpgradeTestingDate\" name=\"targetUpgradeTestingDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ TargetedUpgradeTestingDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                        </FormGroup>\n                    </CardBody>\n                </Card>\n                <Card>\n                    <CardHeader>\n                        Actual Dates of Release\n                                        </CardHeader>\n                    <CardBody>\n                        <FormGroup row className=\"my-0\">\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"actualReleaseDate\">Release Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"actualReleaseDate\" name=\"actualReleaseDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.ActualReleaseDate} /> :\n                                            <Input type=\"date\" id=\"actualReleaseDate\" name=\"actualReleaseDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ ActualReleaseDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"actualCodeFreezeDate\">Code Freeze Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"actualCodeFreezeDate\" name=\"actualCodeFreezeDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.ActualCodeFreezeDate} /> :\n                                            <Input type=\"date\" id=\"actualCodeFreezeDate\" name=\"actualCodeFreezeDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ ActualCodeFreezeDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"actualQATestingDate\">QA Testing Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"actualQATestingDate\" name=\"actualQATestingDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.QAStartDate} /> :\n                                            <Input type=\"date\" id=\"actualQATestingDate\" name=\"actualQATestingDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ QAStartDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                            <Col xs=\"3\">\n                                <FormGroup>\n                                    <Label htmlFor=\"actualUpgradeTestingDate\">Upgrade Testing Date</Label>\n                                    {\n                                        !this.props.isEditing ?\n                                            <Input readOnly={true} type=\"date\" id=\"actualUpgradeTestingDate\" name=\"actualUpgradeTestingDate\" placeholder=\"date\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.UpgradeTestingStartDate} /> :\n                                            <Input type=\"date\" id=\"actualUpgradeTestingDate\" name=\"actualUpgradeTestingDate\" placeholder=\"date\" onChange={(e) => this.props.handleUpdate({ UpgradeTestingStartDate: e.target.value })} />\n                                    }\n                                </FormGroup>\n                            </Col>\n                        </FormGroup>\n                    </CardBody>\n                </Card>\n                <Row>\n                    <Col md=\"6\" lg=\"6\">\n                        <Label htmlFor=\"risksRedFlags\">Risks/Red Flags</Label>\n                        {\n                            !this.props.isEditing ?\n                                <Input readOnly={true} type=\"textarea\" name=\"risksRedFlags\" id=\"risksRedFlags\" rows=\"12\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.RedFlagsRisks}\n                                    placeholder=\"Content...\" /> :\n                                <Input type=\"textarea\" name=\"risksRedFlags\" id=\"risksRedFlags\" rows=\"5\" onChange={(e) => this.props.handleUpdate({ RedFlagsRisks: e.target.value })}\n                                    placeholder=\"Content...\" />\n\n                        }\n                    </Col>\n                    <Col md=\"6\" lg=\"6\">\n                        <Label htmlFor=\"AutomationSyncUp\">Automation Sync Up</Label>\n                        {\n                            !this.props.isEditing ?\n                                <Input readOnly={true} type=\"textarea\" name=\"AutomationSyncUp\" id=\"AutomationSyncUp\" rows=\"12\" value={this.props.basicReleaseInfo && this.props.basicReleaseInfo.AutomationSyncUp}\n                                    placeholder=\"Content...\" /> :\n                                <Input type=\"textarea\" name=\"AutomationSyncUp\" id=\"AutomationSyncUp\" rows=\"5\" onChange={(e) => this.props.handleUpdate({ AutomationSyncUp: e.target.value })}\n                                    placeholder=\"Content...\" />\n\n                        }\n                    </Col>\n\n                </Row>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    currentUser: state.auth.currentUser,\n    basicReleaseInfo: state.release.all.filter(item => {\n        if (item.ReleaseNumber === ownProps.id) {\n            return true;\n        } else {\n            return false;\n        }\n    })[0] //.filter(item => item.name === ownProps.match.params.id)\n})\n\nexport default connect(mapStateToProps, {})(BasicReleaseInfo);\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {\n    Badge,\n    Button,\n    Card,\n    CardBody,\n    CardFooter,\n    CardHeader,\n    Col,\n    Collapse,\n    DropdownItem,\n    DropdownMenu,\n    DropdownToggle,\n    Fade,\n    Form,\n    FormGroup,\n    FormText,\n    FormFeedback,\n    Input,\n    InputGroup,\n    InputGroupAddon,\n    InputGroupButtonDropdown,\n    InputGroupText,\n    Label,\n    Row,\n    Modal, ModalHeader, ModalBody, ModalFooter\n} from 'reactstrap';\nimport { connect } from 'react-redux';\nimport { saveReleaseBasicInfo, updateNavBar, removeFromNavBar, deleteRelease } from '../../actions';\nimport BasicReleaseInfo from './components/BasicReleaseInfo';\nimport './ManageRelease.scss';\nimport { api } from '../../utils/API.utils';\n\nclass ManageRelease extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            release: this.props.allReleases[0] ? this.props.allReleases[0].ReleaseNumber : '',\n            updatedValues: {}\n        }\n    }\n    reset() {\n        this.setState({\n            updatedValues: {}\n        })\n    }\n    delete() {\n        axios.delete(`/api/release/${this.state.release}`)\n            .then(res => {\n                alert(`successfully deleted ${this.state.release}`);\n                this.props.removeFromNavBar({ id: this.state.release });\n                this.props.deleteRelease({ id: this.state.release });\n            }, error => {\n                alert('error deleting release');\n            });\n        this.delToggle();\n    }\n    save() {\n        let data = { ...this.state.updatedValues }\n        console.log('saved data ', data);\n        axios.post(`/api/release`, { ...data })\n            .then(res => {\n                alert('success');\n                this.props.updateNavBar({ id: data.ReleaseNumber });\n                this.props.saveReleaseBasicInfo({ id: data.ReleaseNumber, data: data });\n                this.reset();\n            }, error => {\n                alert('error adding new release');\n            });\n        if (this.state.modal) {\n            this.toggle();\n        }\n        if (this.state.momModal) {\n            this.momToggle();\n        }\n    }\n    toggle = () => this.setState({ modal: !this.state.modal });\n    delToggle = () => this.setState({ delModal: !this.state.delModal });\n    render() {\n        return (\n            (\n                <div>\n                    <Row>\n                        <Col xs=\"4\">\n                            <FormGroup>\n                                <Label htmlFor=\"selectRelease\">Release</Label>\n                                <Input onChange={(e) => this.setState({ release: e.target.value })} type=\"select\" name=\"selectRelease\" id=\"selectRelease\">\n                                    {\n                                        this.props.allReleases.map(release => <option value={release.ReleaseNumber}>{release.ReleaseNumber}</option>)\n                                    }\n                                </Input>\n                            </FormGroup>\n                        </Col>\n                        <Col xs=\"4\">\n                            <Button onClick={() => this.delToggle()} size=\"sm\" color=\"danger\" className=\"rp-mr-del-button\"><i className=\"fa fa-ban\"></i> Delete</Button>\n                        </Col>\n                    </Row>\n                    <Row>\n                        <Col xs=\"12\" sm=\"12\" lg=\"12\">\n                            <Card>\n                                <CardHeader>\n                                    <strong>Add New Release</strong>\n                                </CardHeader>\n                                <CardBody>\n                                    <FormGroup>\n                                        <Label htmlFor=\"release\">Release</Label>\n                                        <Input type=\"text\" id=\"release\" placeholder=\"Enter Release Name\" value={this.state.updatedValues.ReleaseNumber} onChange={(e) => this.setState({ updatedValues: { ...this.state.updatedValues, ReleaseNumber: e.target.value } })} />\n                                    </FormGroup>\n                                    <BasicReleaseInfo id={this.props.id} isEditing={true} handleUpdate={(value) => this.setState({ updatedValues: { ...this.state.updatedValues, ...value } })} />\n                                </CardBody>\n                                <CardFooter>\n                                    <div className=\"form-actions\">\n                                        <Button color=\"primary\" onClick={() => this.toggle()}>Save changes</Button>\n                                    </div>\n                                </CardFooter>\n                            </Card>\n                        </Col>\n                    </Row>\n                    <Modal isOpen={this.state.modal} toggle={() => this.toggle()}>\n                        <ModalHeader toggle={() => this.toggle()}>Confirmation</ModalHeader>\n                        <ModalBody>\n                            Are you sure you want to make the changes?\n                    </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={() => this.save()}>Ok</Button>{' '}\n                            <Button color=\"secondary\" onClick={() => this.toggle()}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                    <Modal isOpen={this.state.delModal} toggle={() => this.delToggle()}>\n                        <ModalHeader toggle={() => this.delToggle()}>Confirmation</ModalHeader>\n                        <ModalBody>\n                            {`Are you sure you want to delete release ${this.state.release}?`}\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={() => this.delete()}>Delete</Button>{' '}\n                            <Button color=\"secondary\" onClick={() => this.delToggle()}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            )\n        )\n    }\n}\nconst mapStateToProps = (state, ownProps) => ({\n    currentUser: state.auth.currentUser,\n    allReleases: state.release.all\n})\n\nexport default connect(mapStateToProps, { saveReleaseBasicInfo, updateNavBar, removeFromNavBar, deleteRelease })(ManageRelease);"],"sourceRoot":""}